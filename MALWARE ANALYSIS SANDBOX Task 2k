import socket
import requests
from bs4 import BeautifulSoup

def scan_ports(ip, ports):
    open_ports = []
    for port in ports:
        try:
            sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            sock.settimeout(1)
            result = sock.connect_ex((ip, port))
            if result == 0:
                open_ports.append(port)
            sock.close()
        except socket.error as e:
            print(f"Error scanning port {port}: {e}")
    return open_ports

def scan_software_versions(url):
    try:
        response = requests.get(url)
        soup = BeautifulSoup(response.text, 'html.parser')
        software_versions = []
        for script in soup.find_all('script'):
            src = script.get('src')
            if src:
                response = requests.get(src)
                if response.status_code == 200:
                    software_versions.append(src)
        return software_versions
    except requests.exceptions.RequestException as e:
        print(f"Error scanning software versions: {e}")

def scan_misconfigurations(url):
    try:
        response = requests.get(url)
        soup = BeautifulSoup(response.text, 'html.parser')
        misconfigurations = []
        for form in soup.find_all('form'):
            action = form.get('action')
            if action and action.startswith('http'):
                misconfigurations.append(action)
        return misconfigurations
    except requests.exceptions.RequestException as e:
        print(f"Error scanning misconfigurations: {e}")

def main():
    ip = input("Enter the IP address to scan: ")
    ports = [21, 22, 80, 443]  # FTP, SSH, HTTP, HTTPS
    open_ports = scan_ports(ip, ports)
    print(f"Open ports: {open_ports}")

    url = input("Enter the URL to scan: ")
    software_versions = scan_software_versions(url)
    print(f"Software versions: {software_versions}")

    misconfigurations = scan_misconfigurations(url)
    print(f"Misconfigurations: {misconfigurations}")

if __name__ == "__main__":
    main()

